namespace WECCL.Utils;

public class Indices
{
    public static Dictionary<string, int> CrowdAudio = new(StringComparer.OrdinalIgnoreCase)
    {
        { "Train", 0 },
        { "Oh", 1 },
        { "Cheer", 2 },
        { "Boo", 3 },
        { "Yay", 4 },
        { "Groan", 5 },
        { "Excitement", 6 },
        { "Murmur", 7 },
        { "Laughter", 8 },
        { "Applause", 9 },
        { "Chant_Generic", 10 },
        { "Stomping", 11 },
        { "Chant_Yes", 12 },
        { "Chant_Sucks", 13 },
        { "Chant_Got", 14 },
        { "Chant_Awesome", 15 },
        { "Chant_CW", 16 },
        { "Chant_Holy", 17 },
        { "Chant_Fucked", 18 },
        { "Chant_Wrestle", 19 },
        { "Chant_Bullshit", 20 },
        { "Chant_Boring", 21 },
        { "Chant_USA", 22 },
        { "Countdown", 30 },
        { "Chant_Count01", 31 },
        { "Chant_Count02", 32 },
        { "Chant_Count03", 33 },
        { "Chant_Count04", 34 },
        { "Chant_Count05", 35 },
        { "Chant_Count06", 36 },
        { "Chant_Count07", 37 },
        { "Chant_Count08", 38 },
        { "Chant_Count09", 39 },
        { "Chant_Count10", 40 },
        { "Oh02", 41 },
        { "Cheer02", 42 },
        { "Boo02", 43 },
        { "Yay02", 44 },
        { "Groan02", 45 },
        { "Excitement02", 46 },
        { "Murmur02", 47 },
        { "Laughter02", 48 },
        { "Applause02", 49 },
        { "Oh03", 51 },
        { "Cheer03", 52 },
        { "Boo03", 53 },
        { "Yay03", 54 },
        { "Groan03", 55 },
        { "Excitement03", 56 },
        { "Murmur03", 57 },
        { "Laughter03", 58 },
        { "Applause03", 59 }
    };
    
    public static int ParseCrowdAudio(string audio)
    {
        if (int.TryParse(audio, out var index))
        {
            return index < CrowdAudio.Count ? index : throw new Exception($"Crowd audio index out of range: {audio}, max: {CrowdAudio.Count - 1}");
        }
        if (CrowdAudio.TryGetValue(audio, out index))
        {
            return index;
        }
        throw new Exception($"Unknown crowd audio: {audio}");
    }

    public static Dictionary<string, int> TauntAnims = new(StringComparer.OrdinalIgnoreCase)
    {
        { "[None]", 0 },
        { "Wave", 1 },
        { "Fist Palm", 2 },
        { "Bring It", 3 },
        { "Footwork", 4 },
        { "Come Here", 5 },
        { "Bicep Flex", 6 },
        { "Wrist Fiddle", 7 },
        { "Prayer", 8 },
        { "Calm Down", 9 },
        { "Fist Palm Down", 10 },
        { "Rule Out", 11 },
        { "Point At Ground", 12 },
        { "Get Out Of My Face", 13 },
        { "Single Count", 14 },
        { "Double Count", 15 },
        { "Disqualify", 16 },
        { "Separate", 17 },
        { "Resume", 18 },
        { "Punch Air", 19 },
        { "Make Decision", 20 },
        { "Go Ahead", 21 },
        { "Shake Raised Arms", 22 },
        { "Pat Chest", 23 },
        { "Go Away", 24 },
        { "Folded Arms", 25 },
        { "Can't See Me", 26 },
        { "Invite Applause", 27 },
        { "Ask The Question", 28 },
        { "Speech Loop", 29 },
        { "Self Abuse", 30 },
        { "Wind Up", 31 },
        { "Hands On Hips", 32 },
        { "Disappointment", 33 },
        { "Shake Fist", 34 },
        { "Shake Trophy", 35 },
        { "Shake Finger", 36 },
        { "Point Forwards", 37 },
        { "Point To Side", 38 },
        { "Clap", 39 },
        { "Raise Arm", 40 },
        { "Raised Arms", 41 },
        { "Outstretched Arms", 42 },
        { "Dare To Hit", 43 },
        { "Middle Fingers", 44 },
        { "Gun Fingers", 45 },
        { "Fancy Cupped Ear", 46 },
        { "Crotch Chop", 47 },
        { "X Sign", 48 },
        { "Diamond Sign", 49 },
        { "Power From Above", 50 },
        { "Raise The Roof", 51 },
        { "Fist Pump", 52 },
        { "Overhead Fist Pump", 53 },
        { "Throat Slice", 54 },
        { "Beat Chest", 55 },
        { "Emotional", 56 },
        { "Salute", 57 },
        { "Surrender", 58 },
        { "Go To Sleep", 59 },
        { "Belt Around Waist", 60 },
        { "Waist Fiddle", 61 },
        { "Pat Stomach", 62 },
        { "Belt Over Shoulder", 63 },
        { "Pat Shoulder", 64 },
        { "Powerful Stance", 65 },
        { "Speech B", 66 },
        { "Thinking", 67 },
        { "Hand On Chest", 68 },
        { "Shrug Shoulders", 69 },
        { "Stay Back", 70 },
        { "Present", 71 },
        { "Raise Hand", 72 },
        { "Fist In Palm", 73 },
        { "Fist On Palm", 74 },
        { "Static Bicep Flex", 75 },
        { "Pray Down", 76 },
        { "Pray Up", 77 },
        { "No Problem", 78 },
        { "Yes Movement", 79 },
        { "Pointed Fingers", 80 },
        { "Point Upward", 81 },
        { "Stay Separate", 82 },
        { "Crossed Fingers", 83 },
        { "Receive Applause", 84 },
        { "Constant Disappointment", 85 },
        { "Hold Trophy", 86 },
        { "Raised Finger", 87 },
        { "Point Straight Forwards", 88 },
        { "Point Straight To Side", 89 },
        { "Hands Together", 90 },
        { "Middle Finger", 91 },
        { "Cupped Ear", 92 },
        { "Crotch Cross", 93 },
        { "Clenched Fists", 94 },
        { "Clenched Fist", 95 },
        { "Raised Fist", 96 },
        { "Head In Hands", 97 },
        { "Microphone Speech", 98 },
        { "Hold Camera (Right)", 99 },
        { "Hold Camera (Left)", 100 },
        { "Make Point", 101 },
        { "Point At Chest", 102 },
        { "Here Or There (Left)", 103 },
        { "Point At Face", 104 },
        { "Point At Head", 105 },
        { "Thumb Shoulders", 106 },
        { "Thumb Chest", 107 },
        { "Thumb Raised", 108 },
        { "Thumbs Up", 109 },
        { "Thumb Outstretched", 110 },
        { "Thumbs Down", 111 },
        { "Here Or There (Right)", 112 },
        { "Rub Fingers", 113 },
        { "Roar", 114 },
        { "Woo", 115 },
        { "Unbelievable", 116 },
        { "Grind Hips", 117 },
        { "Grind Hip", 118 },
        { "Grind Side To Side", 119 },
        { "Muscle Pose A", 120 },
        { "Muscle Pose B", 121 },
        { "Muscle Pose C", 122 },
        { "Muscle Pose Combo", 123 },
        { "Cover Up", 124 },
        { "Drink (Right)", 125 },
        { "Drink (Left)", 126 },
        { "Title Celebration (Rear Right)", 127 },
        { "Title Celebration (Front Right)", 128 },
        { "Title Celebration (Low Right)", 129 },
        { "Clenched Titles", 130 },
        { "Title Celebration (Rear Left)", 131 },
        { "Title Celebration (Front Left)", 132 },
        { "Hold Sign", 133 },
        { "Point At Prop", 134 },
        { "Bicep Curl (Right)", 135 },
        { "Bicep Curl (Left)", 136 },
        { "Need To Pee", 137 },
        { "Need To Crap", 138 },
        { "Style Hair", 139 },
        { "Cue Action", 140 },
        { "Polish Cue", 141 },
        { "Pocket Right", 142 },
        { "Pocket Left", 143 },
        { "Pockets", 144 },
        { "Pocket Loop", 145 },
        { "Solemn", 146 },
        { "Thumb Stampede", 147 },
        { "Outstretched Edge", 148 },
        { "Slide Through", 149 },
        { "Slide Through Loop", 150 },
        { "Too Sweet", 151 },
        { "V Sign", 152 },
        { "Puppetry", 153 },
        { "Trembling Fingers", 154 },
        { "Thumbs Into Outstretched", 155 },
        { "Double Point", 156 },
        { "Monster Claws", 157 },
        { "Double Ring Burst", 158 },
        { "Double Ring Loop", 159 },
        { "OK Sign", 160 },
        { "Double V Signs", 161 },
        { "Two Sweet", 162 },
        { "3 Fingers", 163 },
        { "4 Fingers", 164 },
        { "2 Fingers", 165 },
        { "Count Fingers", 166 },
        { "Eat (Left)", 167 },
        { "Eat (Right)", 168 },
        { "Examine (Left)", 169 },
        { "Examine (Right)", 170 },
        { "Examine Stick (Left)", 171 },
        { "Examine Stick (Right)", 172 },
        { "Selfie (Right)", 173 },
        { "Phone Fiddle (Right)", 174 },
        { "Selfie (Left)", 175 },
        { "Phone Fiddle (Left)", 176 },
        { "Quick Wave (Right)", 177 },
        { "Quick Wave (Left)", 178 },
        { "Guitar Strum", 179 },
        { "Guitar Thrash", 180 },
        { "Read Book (Right)", 181 },
        { "Read Book (Left)", 182 },
        { "Read Tablet (Right)", 183 },
        { "Read Tablet (Left)", 184 }
    };

    public static int ParseTauntAnim(string anim)
    {
        if (int.TryParse(anim, out var index))
        {
            return index < TauntAnims.Count ? index : throw new Exception($"Taunt animation index out of range: {anim}, max: {TauntAnims.Count - 1}");
        }

        if (TauntAnims.TryGetValue(anim.Replace("_"," "), out index))
        {
            return index;
        }

        throw new Exception($"Unknown taunt animation: {anim}");
    }

}